name: Continuous Integration

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Version
        run: |
          echo "PYTHON_VERSION=$(cat ${{ github.workspace }}/pyproject.toml | 
          grep 'python = ' | 
          grep -o -P '(?<=\^).*(?=\")')" >> $GITHUB_ENV
      - name: Setup
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Poetry
        uses: .github/workflows/poetry.yaml
      # - name: Cache Poetry
      #   id: cache-poetry
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.local
      #     key: poetry-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}
      # - name: Poetry
      #   if: steps.cache-poetry.outputs.cache-hit != true
      #   run: curl -sSL https://install.python-poetry.org | python -
      - name: Cache Venv
        id: cache-venv
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: venv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install
        if: steps.cache-venv.outputs.cache-hit != true
        run: poetry install --no-interaction --no-root --only lint,test
      - name: Lint
        run: poetry run ruff .
      - name: Test
        run: poetry run pytest --cov
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          debug: true
          github-token: ${{ github.token }}
